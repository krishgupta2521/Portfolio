{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krish\\\\Desktop\\\\Portfoliio\\\\src\\\\components\\\\MatrixRain.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './MatrixRain.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatrixRain = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Matrix characters\n    const chars = '01アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン';\n    const charArray = chars.split('');\n\n    // Font size\n    const fontSize = 14;\n    const columns = canvas.width / fontSize;\n\n    // Array of drops\n    const drops = [];\n    for (let i = 0; i < columns; i++) {\n      drops[i] = 1;\n    }\n\n    // Draw function\n    const draw = () => {\n      // Black background with opacity for trail effect\n      ctx.fillStyle = 'rgba(10, 10, 10, 0.04)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Set font\n      ctx.fillStyle = '#00ff00';\n      ctx.font = `${fontSize}px 'JetBrains Mono', monospace`;\n\n      // Loop over drops\n      for (let i = 0; i < drops.length; i++) {\n        // Random character\n        const text = charArray[Math.floor(Math.random() * charArray.length)];\n\n        // Draw character\n        ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n\n        // Reset drop to top randomly\n        if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {\n          drops[i] = 0;\n        }\n\n        // Move drop down\n        drops[i]++;\n      }\n    };\n\n    // Animation loop\n    const interval = setInterval(draw, 50);\n\n    // Cleanup\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"matrix-rain\",\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: -1,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(MatrixRain, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = MatrixRain;\nexport default MatrixRain;\nvar _c;\n$RefreshReg$(_c, \"MatrixRain\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","MatrixRain","_s","canvasRef","canvas","current","ctx","getContext","resizeCanvas","width","window","innerWidth","height","innerHeight","addEventListener","chars","charArray","split","fontSize","columns","drops","i","draw","fillStyle","fillRect","font","length","text","Math","floor","random","fillText","interval","setInterval","clearInterval","removeEventListener","ref","className","style","position","top","left","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/krish/Desktop/Portfoliio/src/components/MatrixRain.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './MatrixRain.css';\r\n\r\nconst MatrixRain = () => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    // Set canvas size\r\n    const resizeCanvas = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    };\r\n    \r\n    resizeCanvas();\r\n    window.addEventListener('resize', resizeCanvas);\r\n\r\n    // Matrix characters\r\n    const chars = '01アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン';\r\n    const charArray = chars.split('');\r\n\r\n    // Font size\r\n    const fontSize = 14;\r\n    const columns = canvas.width / fontSize;\r\n\r\n    // Array of drops\r\n    const drops = [];\r\n    for (let i = 0; i < columns; i++) {\r\n      drops[i] = 1;\r\n    }\r\n\r\n    // Draw function\r\n    const draw = () => {\r\n      // Black background with opacity for trail effect\r\n      ctx.fillStyle = 'rgba(10, 10, 10, 0.04)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // Set font\r\n      ctx.fillStyle = '#00ff00';\r\n      ctx.font = `${fontSize}px 'JetBrains Mono', monospace`;\r\n\r\n      // Loop over drops\r\n      for (let i = 0; i < drops.length; i++) {\r\n        // Random character\r\n        const text = charArray[Math.floor(Math.random() * charArray.length)];\r\n        \r\n        // Draw character\r\n        ctx.fillText(text, i * fontSize, drops[i] * fontSize);\r\n\r\n        // Reset drop to top randomly\r\n        if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {\r\n          drops[i] = 0;\r\n        }\r\n\r\n        // Move drop down\r\n        drops[i]++;\r\n      }\r\n    };\r\n\r\n    // Animation loop\r\n    const interval = setInterval(draw, 50);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      clearInterval(interval);\r\n      window.removeEventListener('resize', resizeCanvas);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className=\"matrix-rain\"\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: -1,\r\n        pointerEvents: 'none'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MatrixRain;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}